<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>